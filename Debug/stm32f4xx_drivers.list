
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000009b4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000b5c  08000b5c  00010b5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000b68  08000b68  00010b70  2**0
                  CONTENTS
  4 .ARM          00000000  08000b68  08000b68  00010b70  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b68  08000b70  00010b70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b68  08000b68  00010b68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b6c  08000b6c  00010b6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010b70  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000b70  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000b70  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010b70  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001cb0  00000000  00000000  00010ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000058d  00000000  00000000  00012850  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000198  00000000  00000000  00012de0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000150  00000000  00000000  00012f78  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002299  00000000  00000000  000130c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001891  00000000  00000000  00015361  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000094e7  00000000  00000000  00016bf2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000200d9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000580  00000000  00000000  00020154  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000b44 	.word	0x08000b44

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000b44 	.word	0x08000b44

080001e8 <strlen>:
 80001e8:	4603      	mov	r3, r0
 80001ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001ee:	2a00      	cmp	r2, #0
 80001f0:	d1fb      	bne.n	80001ea <strlen+0x2>
 80001f2:	1a18      	subs	r0, r3, r0
 80001f4:	3801      	subs	r0, #1
 80001f6:	4770      	bx	lr

080001f8 <EXTI0_IRQHandler>:

	return  0;
}

void EXTI0_IRQHandler(void)
{
 80001f8:	b580      	push	{r7, lr}
 80001fa:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(0);
 80001fc:	2000      	movs	r0, #0
 80001fe:	f000 fb2f 	bl	8000860 <GPIO_IRQHandling>
}
 8000202:	bf00      	nop
 8000204:	bd80      	pop	{r7, pc}
	...

08000208 <SPI2_GPIOInit>:

#include "stm32f407xx.h"
#include<string.h>

void SPI2_GPIOInit(void)
{
 8000208:	b580      	push	{r7, lr}
 800020a:	b084      	sub	sp, #16
 800020c:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPIPins;

	SPIPins.pGPIOx = GPIOB;
 800020e:	4b14      	ldr	r3, [pc, #80]	; (8000260 <SPI2_GPIOInit+0x58>)
 8000210:	607b      	str	r3, [r7, #4]
	SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFEN;
 8000212:	2302      	movs	r3, #2
 8000214:	727b      	strb	r3, [r7, #9]
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;
 8000216:	2305      	movs	r3, #5
 8000218:	737b      	strb	r3, [r7, #13]
	SPIPins.GPIO_PinConfig.GPIO_PinOpType = GPIO_OP_TYPE_PP;
 800021a:	2300      	movs	r3, #0
 800021c:	733b      	strb	r3, [r7, #12]
	SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800021e:	2300      	movs	r3, #0
 8000220:	72fb      	strb	r3, [r7, #11]
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000222:	230d      	movs	r3, #13
 8000224:	723b      	strb	r3, [r7, #8]
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000226:	230d      	movs	r3, #13
 8000228:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 800022a:	1d3b      	adds	r3, r7, #4
 800022c:	4618      	mov	r0, r3
 800022e:	f000 f889 	bl	8000344 <GPIO_Init>
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000232:	230f      	movs	r3, #15
 8000234:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000236:	1d3b      	adds	r3, r7, #4
 8000238:	4618      	mov	r0, r3
 800023a:	f000 f883 	bl	8000344 <GPIO_Init>
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 800023e:	230e      	movs	r3, #14
 8000240:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 8000242:	1d3b      	adds	r3, r7, #4
 8000244:	4618      	mov	r0, r3
 8000246:	f000 f87d 	bl	8000344 <GPIO_Init>
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800024a:	230c      	movs	r3, #12
 800024c:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPIPins);
 800024e:	1d3b      	adds	r3, r7, #4
 8000250:	4618      	mov	r0, r3
 8000252:	f000 f877 	bl	8000344 <GPIO_Init>
}
 8000256:	bf00      	nop
 8000258:	3710      	adds	r7, #16
 800025a:	46bd      	mov	sp, r7
 800025c:	bd80      	pop	{r7, pc}
 800025e:	bf00      	nop
 8000260:	40020400 	.word	0x40020400

08000264 <SPI2_Init>:

void SPI2_Init()
{
 8000264:	b580      	push	{r7, lr}
 8000266:	b088      	sub	sp, #32
 8000268:	af00      	add	r7, sp, #0

	SPI_Handle_t SPI2Handle;

	SPI2Handle.pSPIx = SPI2;
 800026a:	4b0c      	ldr	r3, [pc, #48]	; (800029c <SPI2_Init+0x38>)
 800026c:	603b      	str	r3, [r7, #0]
	SPI2Handle.SPIConfig.SPI_BusConfig = SPI_BUSCONFIG_FD;
 800026e:	2301      	movs	r3, #1
 8000270:	717b      	strb	r3, [r7, #5]
	SPI2Handle.SPIConfig.SPI_DeviceMode = SPI_DM_MASTER;
 8000272:	2301      	movs	r3, #1
 8000274:	713b      	strb	r3, [r7, #4]
	SPI2Handle.SPIConfig.SPI_SclkSpeed = SPI_SPEED2;
 8000276:	2300      	movs	r3, #0
 8000278:	71bb      	strb	r3, [r7, #6]
	SPI2Handle.SPIConfig.SPI_DFF = SPI_DFF_8;
 800027a:	2300      	movs	r3, #0
 800027c:	71fb      	strb	r3, [r7, #7]
	SPI2Handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 800027e:	2300      	movs	r3, #0
 8000280:	723b      	strb	r3, [r7, #8]
	SPI2Handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 8000282:	2300      	movs	r3, #0
 8000284:	727b      	strb	r3, [r7, #9]
	SPI2Handle.SPIConfig.SPI_SSM = SPI_SSM_EN;
 8000286:	2301      	movs	r3, #1
 8000288:	72bb      	strb	r3, [r7, #10]

	SPI_Init(&SPI2Handle);
 800028a:	463b      	mov	r3, r7
 800028c:	4618      	mov	r0, r3
 800028e:	f000 fb07 	bl	80008a0 <SPI_Init>

}
 8000292:	bf00      	nop
 8000294:	3720      	adds	r7, #32
 8000296:	46bd      	mov	sp, r7
 8000298:	bd80      	pop	{r7, pc}
 800029a:	bf00      	nop
 800029c:	40003800 	.word	0x40003800

080002a0 <main>:
int main(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b084      	sub	sp, #16
 80002a4:	af00      	add	r7, sp, #0
	char userdata[] ="Hello World";
 80002a6:	4a10      	ldr	r2, [pc, #64]	; (80002e8 <main+0x48>)
 80002a8:	1d3b      	adds	r3, r7, #4
 80002aa:	ca07      	ldmia	r2, {r0, r1, r2}
 80002ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
	SPI2_GPIOInit();
 80002b0:	f7ff ffaa 	bl	8000208 <SPI2_GPIOInit>
	SPI2_Init();
 80002b4:	f7ff ffd6 	bl	8000264 <SPI2_Init>
	SPI_SSIconfig(SPI2,ENABLE);
 80002b8:	2101      	movs	r1, #1
 80002ba:	480c      	ldr	r0, [pc, #48]	; (80002ec <main+0x4c>)
 80002bc:	f000 fc02 	bl	8000ac4 <SPI_SSIconfig>
	//Enable SPI
	SPI_PeripheralControl(SPI2,ENABLE);
 80002c0:	2101      	movs	r1, #1
 80002c2:	480a      	ldr	r0, [pc, #40]	; (80002ec <main+0x4c>)
 80002c4:	f000 fbe2 	bl	8000a8c <SPI_PeripheralControl>
	SPI_SendData(SPI2,(uint8_t *)userdata,strlen(userdata));
 80002c8:	1d3b      	adds	r3, r7, #4
 80002ca:	4618      	mov	r0, r3
 80002cc:	f7ff ff8c 	bl	80001e8 <strlen>
 80002d0:	4602      	mov	r2, r0
 80002d2:	1d3b      	adds	r3, r7, #4
 80002d4:	4619      	mov	r1, r3
 80002d6:	4805      	ldr	r0, [pc, #20]	; (80002ec <main+0x4c>)
 80002d8:	f000 fba2 	bl	8000a20 <SPI_SendData>
	SPI_PeripheralControl(SPI2,DISABLE);
 80002dc:	2100      	movs	r1, #0
 80002de:	4803      	ldr	r0, [pc, #12]	; (80002ec <main+0x4c>)
 80002e0:	f000 fbd4 	bl	8000a8c <SPI_PeripheralControl>

	while(1);
 80002e4:	e7fe      	b.n	80002e4 <main+0x44>
 80002e6:	bf00      	nop
 80002e8:	08000b5c 	.word	0x08000b5c
 80002ec:	40003800 	.word	0x40003800

080002f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f0:	480d      	ldr	r0, [pc, #52]	; (8000328 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f4:	480d      	ldr	r0, [pc, #52]	; (800032c <LoopForever+0x6>)
  ldr r1, =_edata
 80002f6:	490e      	ldr	r1, [pc, #56]	; (8000330 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002f8:	4a0e      	ldr	r2, [pc, #56]	; (8000334 <LoopForever+0xe>)
  movs r3, #0
 80002fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002fc:	e002      	b.n	8000304 <LoopCopyDataInit>

080002fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000300:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000302:	3304      	adds	r3, #4

08000304 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000304:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000306:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000308:	d3f9      	bcc.n	80002fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030a:	4a0b      	ldr	r2, [pc, #44]	; (8000338 <LoopForever+0x12>)
  ldr r4, =_ebss
 800030c:	4c0b      	ldr	r4, [pc, #44]	; (800033c <LoopForever+0x16>)
  movs r3, #0
 800030e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000310:	e001      	b.n	8000316 <LoopFillZerobss>

08000312 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000312:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000314:	3204      	adds	r2, #4

08000316 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000316:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000318:	d3fb      	bcc.n	8000312 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800031a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800031e:	f000 fbed 	bl	8000afc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000322:	f7ff ffbd 	bl	80002a0 <main>

08000326 <LoopForever>:

LoopForever:
    b LoopForever
 8000326:	e7fe      	b.n	8000326 <LoopForever>
  ldr   r0, =_estack
 8000328:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800032c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000330:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000334:	08000b70 	.word	0x08000b70
  ldr r2, =_sbss
 8000338:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800033c:	2000001c 	.word	0x2000001c

08000340 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000340:	e7fe      	b.n	8000340 <ADC_IRQHandler>
	...

08000344 <GPIO_Init>:
 *      Author: neilpatel
 */
#include "stm32f407xx_gpio_driver.h"

void GPIO_Init(GPIO_Handle_t  *pGPIOHandle)
{
 8000344:	b580      	push	{r7, lr}
 8000346:	b088      	sub	sp, #32
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]
	//configure the mode of pin
	uint32_t temp = 0;
 800034c:	2300      	movs	r3, #0
 800034e:	61fb      	str	r3, [r7, #28]
	GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	681b      	ldr	r3, [r3, #0]
 8000354:	2101      	movs	r1, #1
 8000356:	4618      	mov	r0, r3
 8000358:	f000 f99a 	bl	8000690 <GPIO_PeriClockControl>
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ALTFEN)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	795b      	ldrb	r3, [r3, #5]
 8000360:	2b02      	cmp	r3, #2
 8000362:	d821      	bhi.n	80003a8 <GPIO_Init+0x64>
	{
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	795b      	ldrb	r3, [r3, #5]
 8000368:	461a      	mov	r2, r3
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	791b      	ldrb	r3, [r3, #4]
 800036e:	005b      	lsls	r3, r3, #1
 8000370:	fa02 f303 	lsl.w	r3, r2, r3
 8000374:	61fb      	str	r3, [r7, #28]
		pGPIOHandle->pGPIOx->MODER &= ~ (0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	681a      	ldr	r2, [r3, #0]
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	791b      	ldrb	r3, [r3, #4]
 8000380:	4619      	mov	r1, r3
 8000382:	2303      	movs	r3, #3
 8000384:	408b      	lsls	r3, r1
 8000386:	43db      	mvns	r3, r3
 8000388:	4619      	mov	r1, r3
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	400a      	ands	r2, r1
 8000390:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	6819      	ldr	r1, [r3, #0]
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	69fa      	ldr	r2, [r7, #28]
 800039e:	430a      	orrs	r2, r1
 80003a0:	601a      	str	r2, [r3, #0]
		temp = 0;
 80003a2:	2300      	movs	r3, #0
 80003a4:	61fb      	str	r3, [r7, #28]
 80003a6:	e0cd      	b.n	8000544 <GPIO_Init+0x200>
	}
	else
	{
		//code in Interrupt mode
		//Falling Edge
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == (GPIO_MODE_IT_FT))
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	795b      	ldrb	r3, [r3, #5]
 80003ac:	2b04      	cmp	r3, #4
 80003ae:	d117      	bne.n	80003e0 <GPIO_Init+0x9c>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003b0:	4b4b      	ldr	r3, [pc, #300]	; (80004e0 <GPIO_Init+0x19c>)
 80003b2:	68db      	ldr	r3, [r3, #12]
 80003b4:	687a      	ldr	r2, [r7, #4]
 80003b6:	7912      	ldrb	r2, [r2, #4]
 80003b8:	4611      	mov	r1, r2
 80003ba:	2201      	movs	r2, #1
 80003bc:	408a      	lsls	r2, r1
 80003be:	4611      	mov	r1, r2
 80003c0:	4a47      	ldr	r2, [pc, #284]	; (80004e0 <GPIO_Init+0x19c>)
 80003c2:	430b      	orrs	r3, r1
 80003c4:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c6:	4b46      	ldr	r3, [pc, #280]	; (80004e0 <GPIO_Init+0x19c>)
 80003c8:	689b      	ldr	r3, [r3, #8]
 80003ca:	687a      	ldr	r2, [r7, #4]
 80003cc:	7912      	ldrb	r2, [r2, #4]
 80003ce:	4611      	mov	r1, r2
 80003d0:	2201      	movs	r2, #1
 80003d2:	408a      	lsls	r2, r1
 80003d4:	43d2      	mvns	r2, r2
 80003d6:	4611      	mov	r1, r2
 80003d8:	4a41      	ldr	r2, [pc, #260]	; (80004e0 <GPIO_Init+0x19c>)
 80003da:	400b      	ands	r3, r1
 80003dc:	6093      	str	r3, [r2, #8]
 80003de:	e035      	b.n	800044c <GPIO_Init+0x108>
		}
		//Rising Edge
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == (GPIO_MODE_IT_RT))
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	795b      	ldrb	r3, [r3, #5]
 80003e4:	2b05      	cmp	r3, #5
 80003e6:	d117      	bne.n	8000418 <GPIO_Init+0xd4>
		{
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003e8:	4b3d      	ldr	r3, [pc, #244]	; (80004e0 <GPIO_Init+0x19c>)
 80003ea:	689b      	ldr	r3, [r3, #8]
 80003ec:	687a      	ldr	r2, [r7, #4]
 80003ee:	7912      	ldrb	r2, [r2, #4]
 80003f0:	4611      	mov	r1, r2
 80003f2:	2201      	movs	r2, #1
 80003f4:	408a      	lsls	r2, r1
 80003f6:	4611      	mov	r1, r2
 80003f8:	4a39      	ldr	r2, [pc, #228]	; (80004e0 <GPIO_Init+0x19c>)
 80003fa:	430b      	orrs	r3, r1
 80003fc:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003fe:	4b38      	ldr	r3, [pc, #224]	; (80004e0 <GPIO_Init+0x19c>)
 8000400:	68db      	ldr	r3, [r3, #12]
 8000402:	687a      	ldr	r2, [r7, #4]
 8000404:	7912      	ldrb	r2, [r2, #4]
 8000406:	4611      	mov	r1, r2
 8000408:	2201      	movs	r2, #1
 800040a:	408a      	lsls	r2, r1
 800040c:	43d2      	mvns	r2, r2
 800040e:	4611      	mov	r1, r2
 8000410:	4a33      	ldr	r2, [pc, #204]	; (80004e0 <GPIO_Init+0x19c>)
 8000412:	400b      	ands	r3, r1
 8000414:	60d3      	str	r3, [r2, #12]
 8000416:	e019      	b.n	800044c <GPIO_Init+0x108>
		}
		//Falling-Rising Edge
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == (GPIO_MODE_IT_RFT))
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	795b      	ldrb	r3, [r3, #5]
 800041c:	2b06      	cmp	r3, #6
 800041e:	d115      	bne.n	800044c <GPIO_Init+0x108>
		{
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000420:	4b2f      	ldr	r3, [pc, #188]	; (80004e0 <GPIO_Init+0x19c>)
 8000422:	68db      	ldr	r3, [r3, #12]
 8000424:	687a      	ldr	r2, [r7, #4]
 8000426:	7912      	ldrb	r2, [r2, #4]
 8000428:	4611      	mov	r1, r2
 800042a:	2201      	movs	r2, #1
 800042c:	408a      	lsls	r2, r1
 800042e:	4611      	mov	r1, r2
 8000430:	4a2b      	ldr	r2, [pc, #172]	; (80004e0 <GPIO_Init+0x19c>)
 8000432:	430b      	orrs	r3, r1
 8000434:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000436:	4b2a      	ldr	r3, [pc, #168]	; (80004e0 <GPIO_Init+0x19c>)
 8000438:	689b      	ldr	r3, [r3, #8]
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	7912      	ldrb	r2, [r2, #4]
 800043e:	4611      	mov	r1, r2
 8000440:	2201      	movs	r2, #1
 8000442:	408a      	lsls	r2, r1
 8000444:	4611      	mov	r1, r2
 8000446:	4a26      	ldr	r2, [pc, #152]	; (80004e0 <GPIO_Init+0x19c>)
 8000448:	430b      	orrs	r3, r1
 800044a:	6093      	str	r3, [r2, #8]
		}

		//Config GPIO port selection in SYSCFG_EXTICR
		uint32_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	791b      	ldrb	r3, [r3, #4]
 8000450:	089b      	lsrs	r3, r3, #2
 8000452:	b2db      	uxtb	r3, r3
 8000454:	61bb      	str	r3, [r7, #24]
		uint32_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	791b      	ldrb	r3, [r3, #4]
 800045a:	f003 0303 	and.w	r3, r3, #3
 800045e:	617b      	str	r3, [r7, #20]
		uint8_t portcode =GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000460:	687b      	ldr	r3, [r7, #4]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	4a1f      	ldr	r2, [pc, #124]	; (80004e4 <GPIO_Init+0x1a0>)
 8000466:	4293      	cmp	r3, r2
 8000468:	d04e      	beq.n	8000508 <GPIO_Init+0x1c4>
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	4a1e      	ldr	r2, [pc, #120]	; (80004e8 <GPIO_Init+0x1a4>)
 8000470:	4293      	cmp	r3, r2
 8000472:	d032      	beq.n	80004da <GPIO_Init+0x196>
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	4a1c      	ldr	r2, [pc, #112]	; (80004ec <GPIO_Init+0x1a8>)
 800047a:	4293      	cmp	r3, r2
 800047c:	d02b      	beq.n	80004d6 <GPIO_Init+0x192>
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	4a1b      	ldr	r2, [pc, #108]	; (80004f0 <GPIO_Init+0x1ac>)
 8000484:	4293      	cmp	r3, r2
 8000486:	d024      	beq.n	80004d2 <GPIO_Init+0x18e>
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4a19      	ldr	r2, [pc, #100]	; (80004f4 <GPIO_Init+0x1b0>)
 800048e:	4293      	cmp	r3, r2
 8000490:	d01d      	beq.n	80004ce <GPIO_Init+0x18a>
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	4a18      	ldr	r2, [pc, #96]	; (80004f8 <GPIO_Init+0x1b4>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d016      	beq.n	80004ca <GPIO_Init+0x186>
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	4a16      	ldr	r2, [pc, #88]	; (80004fc <GPIO_Init+0x1b8>)
 80004a2:	4293      	cmp	r3, r2
 80004a4:	d00f      	beq.n	80004c6 <GPIO_Init+0x182>
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	4a15      	ldr	r2, [pc, #84]	; (8000500 <GPIO_Init+0x1bc>)
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d008      	beq.n	80004c2 <GPIO_Init+0x17e>
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	4a13      	ldr	r2, [pc, #76]	; (8000504 <GPIO_Init+0x1c0>)
 80004b6:	4293      	cmp	r3, r2
 80004b8:	d101      	bne.n	80004be <GPIO_Init+0x17a>
 80004ba:	2308      	movs	r3, #8
 80004bc:	e025      	b.n	800050a <GPIO_Init+0x1c6>
 80004be:	2300      	movs	r3, #0
 80004c0:	e023      	b.n	800050a <GPIO_Init+0x1c6>
 80004c2:	2307      	movs	r3, #7
 80004c4:	e021      	b.n	800050a <GPIO_Init+0x1c6>
 80004c6:	2306      	movs	r3, #6
 80004c8:	e01f      	b.n	800050a <GPIO_Init+0x1c6>
 80004ca:	2305      	movs	r3, #5
 80004cc:	e01d      	b.n	800050a <GPIO_Init+0x1c6>
 80004ce:	2304      	movs	r3, #4
 80004d0:	e01b      	b.n	800050a <GPIO_Init+0x1c6>
 80004d2:	2303      	movs	r3, #3
 80004d4:	e019      	b.n	800050a <GPIO_Init+0x1c6>
 80004d6:	2302      	movs	r3, #2
 80004d8:	e017      	b.n	800050a <GPIO_Init+0x1c6>
 80004da:	2301      	movs	r3, #1
 80004dc:	e015      	b.n	800050a <GPIO_Init+0x1c6>
 80004de:	bf00      	nop
 80004e0:	40013c00 	.word	0x40013c00
 80004e4:	40020000 	.word	0x40020000
 80004e8:	40020400 	.word	0x40020400
 80004ec:	40020800 	.word	0x40020800
 80004f0:	40020c00 	.word	0x40020c00
 80004f4:	40021000 	.word	0x40021000
 80004f8:	40021400 	.word	0x40021400
 80004fc:	40021500 	.word	0x40021500
 8000500:	40021c00 	.word	0x40021c00
 8000504:	40022000 	.word	0x40022000
 8000508:	2300      	movs	r3, #0
 800050a:	74fb      	strb	r3, [r7, #19]
		SYSCGF_PCLK_EN();
 800050c:	4b5d      	ldr	r3, [pc, #372]	; (8000684 <GPIO_Init+0x340>)
 800050e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000510:	4a5c      	ldr	r2, [pc, #368]	; (8000684 <GPIO_Init+0x340>)
 8000512:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000516:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000518:	7cfa      	ldrb	r2, [r7, #19]
 800051a:	697b      	ldr	r3, [r7, #20]
 800051c:	009b      	lsls	r3, r3, #2
 800051e:	fa02 f303 	lsl.w	r3, r2, r3
 8000522:	4a59      	ldr	r2, [pc, #356]	; (8000688 <GPIO_Init+0x344>)
 8000524:	4619      	mov	r1, r3
 8000526:	69bb      	ldr	r3, [r7, #24]
 8000528:	3302      	adds	r3, #2
 800052a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		// Enable Interrupt on respective pin
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800052e:	4b57      	ldr	r3, [pc, #348]	; (800068c <GPIO_Init+0x348>)
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	687a      	ldr	r2, [r7, #4]
 8000534:	7912      	ldrb	r2, [r2, #4]
 8000536:	4611      	mov	r1, r2
 8000538:	2201      	movs	r2, #1
 800053a:	408a      	lsls	r2, r1
 800053c:	4611      	mov	r1, r2
 800053e:	4a53      	ldr	r2, [pc, #332]	; (800068c <GPIO_Init+0x348>)
 8000540:	430b      	orrs	r3, r1
 8000542:	6013      	str	r3, [r2, #0]
	}

	//configure speed
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed  << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	799b      	ldrb	r3, [r3, #6]
 8000548:	461a      	mov	r2, r3
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	791b      	ldrb	r3, [r3, #4]
 800054e:	005b      	lsls	r3, r3, #1
 8000550:	fa02 f303 	lsl.w	r3, r2, r3
 8000554:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~ (0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	681b      	ldr	r3, [r3, #0]
 800055a:	689a      	ldr	r2, [r3, #8]
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	791b      	ldrb	r3, [r3, #4]
 8000560:	4619      	mov	r1, r3
 8000562:	2303      	movs	r3, #3
 8000564:	408b      	lsls	r3, r1
 8000566:	43db      	mvns	r3, r3
 8000568:	4619      	mov	r1, r3
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	400a      	ands	r2, r1
 8000570:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	681b      	ldr	r3, [r3, #0]
 8000576:	6899      	ldr	r1, [r3, #8]
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	69fa      	ldr	r2, [r7, #28]
 800057e:	430a      	orrs	r2, r1
 8000580:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000582:	2300      	movs	r3, #0
 8000584:	61fb      	str	r3, [r7, #28]

	//Configure pupd
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl  << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000586:	687b      	ldr	r3, [r7, #4]
 8000588:	79db      	ldrb	r3, [r3, #7]
 800058a:	461a      	mov	r2, r3
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	791b      	ldrb	r3, [r3, #4]
 8000590:	005b      	lsls	r3, r3, #1
 8000592:	fa02 f303 	lsl.w	r3, r2, r3
 8000596:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->PUPDR &= ~ (0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	68da      	ldr	r2, [r3, #12]
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	791b      	ldrb	r3, [r3, #4]
 80005a2:	4619      	mov	r1, r3
 80005a4:	2303      	movs	r3, #3
 80005a6:	408b      	lsls	r3, r1
 80005a8:	43db      	mvns	r3, r3
 80005aa:	4619      	mov	r1, r3
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	400a      	ands	r2, r1
 80005b2:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	68d9      	ldr	r1, [r3, #12]
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	69fa      	ldr	r2, [r7, #28]
 80005c0:	430a      	orrs	r2, r1
 80005c2:	60da      	str	r2, [r3, #12]
	temp = 0;
 80005c4:	2300      	movs	r3, #0
 80005c6:	61fb      	str	r3, [r7, #28]

	//Configure the optype
	temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOpType  << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	7a1b      	ldrb	r3, [r3, #8]
 80005cc:	461a      	mov	r2, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	fa02 f303 	lsl.w	r3, r2, r3
 80005d6:	61fb      	str	r3, [r7, #28]
	pGPIOHandle->pGPIOx->OTYPER &= ~ (0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	685a      	ldr	r2, [r3, #4]
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	791b      	ldrb	r3, [r3, #4]
 80005e2:	4619      	mov	r1, r3
 80005e4:	2301      	movs	r3, #1
 80005e6:	408b      	lsls	r3, r1
 80005e8:	43db      	mvns	r3, r3
 80005ea:	4619      	mov	r1, r3
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	400a      	ands	r2, r1
 80005f2:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	6859      	ldr	r1, [r3, #4]
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	69fa      	ldr	r2, [r7, #28]
 8000600:	430a      	orrs	r2, r1
 8000602:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000604:	2300      	movs	r3, #0
 8000606:	61fb      	str	r3, [r7, #28]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFEN)
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	795b      	ldrb	r3, [r3, #5]
 800060c:	2b02      	cmp	r3, #2
 800060e:	d134      	bne.n	800067a <GPIO_Init+0x336>
	{
		uint32_t temp1;
		uint32_t temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	791b      	ldrb	r3, [r3, #4]
 8000614:	08db      	lsrs	r3, r3, #3
 8000616:	b2db      	uxtb	r3, r3
 8000618:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	791b      	ldrb	r3, [r3, #4]
 800061e:	f003 0307 	and.w	r3, r3, #7
 8000622:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~ (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	68fa      	ldr	r2, [r7, #12]
 800062a:	3208      	adds	r2, #8
 800062c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000630:	687b      	ldr	r3, [r7, #4]
 8000632:	7a5b      	ldrb	r3, [r3, #9]
 8000634:	4619      	mov	r1, r3
 8000636:	68bb      	ldr	r3, [r7, #8]
 8000638:	009b      	lsls	r3, r3, #2
 800063a:	fa01 f303 	lsl.w	r3, r1, r3
 800063e:	43db      	mvns	r3, r3
 8000640:	4619      	mov	r1, r3
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	4011      	ands	r1, r2
 8000648:	68fa      	ldr	r2, [r7, #12]
 800064a:	3208      	adds	r2, #8
 800064c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	68fa      	ldr	r2, [r7, #12]
 8000656:	3208      	adds	r2, #8
 8000658:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800065c:	687b      	ldr	r3, [r7, #4]
 800065e:	7a5b      	ldrb	r3, [r3, #9]
 8000660:	4619      	mov	r1, r3
 8000662:	68bb      	ldr	r3, [r7, #8]
 8000664:	009b      	lsls	r3, r3, #2
 8000666:	fa01 f303 	lsl.w	r3, r1, r3
 800066a:	4619      	mov	r1, r3
 800066c:	687b      	ldr	r3, [r7, #4]
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	4311      	orrs	r1, r2
 8000672:	68fa      	ldr	r2, [r7, #12]
 8000674:	3208      	adds	r2, #8
 8000676:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 800067a:	bf00      	nop
 800067c:	3720      	adds	r7, #32
 800067e:	46bd      	mov	sp, r7
 8000680:	bd80      	pop	{r7, pc}
 8000682:	bf00      	nop
 8000684:	40023800 	.word	0x40023800
 8000688:	40013800 	.word	0x40013800
 800068c:	40013c00 	.word	0x40013c00

08000690 <GPIO_PeriClockControl>:
		GPIOI_REG_RESET();
	}
}

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx,uint8_t EnorDi)
{
 8000690:	b480      	push	{r7}
 8000692:	b083      	sub	sp, #12
 8000694:	af00      	add	r7, sp, #0
 8000696:	6078      	str	r0, [r7, #4]
 8000698:	460b      	mov	r3, r1
 800069a:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 800069c:	78fb      	ldrb	r3, [r7, #3]
 800069e:	2b01      	cmp	r3, #1
 80006a0:	d162      	bne.n	8000768 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80006a2:	687b      	ldr	r3, [r7, #4]
 80006a4:	4a64      	ldr	r2, [pc, #400]	; (8000838 <GPIO_PeriClockControl+0x1a8>)
 80006a6:	4293      	cmp	r3, r2
 80006a8:	d106      	bne.n	80006b8 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80006aa:	4b64      	ldr	r3, [pc, #400]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006ae:	4a63      	ldr	r2, [pc, #396]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006b0:	f043 0301 	orr.w	r3, r3, #1
 80006b4:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 80006b6:	e0b9      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	4a61      	ldr	r2, [pc, #388]	; (8000840 <GPIO_PeriClockControl+0x1b0>)
 80006bc:	4293      	cmp	r3, r2
 80006be:	d106      	bne.n	80006ce <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80006c0:	4b5e      	ldr	r3, [pc, #376]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006c4:	4a5d      	ldr	r2, [pc, #372]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006c6:	f043 0302 	orr.w	r3, r3, #2
 80006ca:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006cc:	e0ae      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	4a5c      	ldr	r2, [pc, #368]	; (8000844 <GPIO_PeriClockControl+0x1b4>)
 80006d2:	4293      	cmp	r3, r2
 80006d4:	d106      	bne.n	80006e4 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80006d6:	4b59      	ldr	r3, [pc, #356]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006da:	4a58      	ldr	r2, [pc, #352]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006dc:	f043 0304 	orr.w	r3, r3, #4
 80006e0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006e2:	e0a3      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	4a58      	ldr	r2, [pc, #352]	; (8000848 <GPIO_PeriClockControl+0x1b8>)
 80006e8:	4293      	cmp	r3, r2
 80006ea:	d106      	bne.n	80006fa <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80006ec:	4b53      	ldr	r3, [pc, #332]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006f0:	4a52      	ldr	r2, [pc, #328]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80006f2:	f043 0308 	orr.w	r3, r3, #8
 80006f6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80006f8:	e098      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 80006fa:	687b      	ldr	r3, [r7, #4]
 80006fc:	4a53      	ldr	r2, [pc, #332]	; (800084c <GPIO_PeriClockControl+0x1bc>)
 80006fe:	4293      	cmp	r3, r2
 8000700:	d106      	bne.n	8000710 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000702:	4b4e      	ldr	r3, [pc, #312]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000704:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000706:	4a4d      	ldr	r2, [pc, #308]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000708:	f043 0310 	orr.w	r3, r3, #16
 800070c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800070e:	e08d      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	4a4f      	ldr	r2, [pc, #316]	; (8000850 <GPIO_PeriClockControl+0x1c0>)
 8000714:	4293      	cmp	r3, r2
 8000716:	d106      	bne.n	8000726 <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000718:	4b48      	ldr	r3, [pc, #288]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 800071a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800071c:	4a47      	ldr	r2, [pc, #284]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 800071e:	f043 0320 	orr.w	r3, r3, #32
 8000722:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000724:	e082      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	4a4a      	ldr	r2, [pc, #296]	; (8000854 <GPIO_PeriClockControl+0x1c4>)
 800072a:	4293      	cmp	r3, r2
 800072c:	d106      	bne.n	800073c <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 800072e:	4b43      	ldr	r3, [pc, #268]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000730:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000732:	4a42      	ldr	r2, [pc, #264]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000734:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000738:	6313      	str	r3, [r2, #48]	; 0x30
}
 800073a:	e077      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	4a46      	ldr	r2, [pc, #280]	; (8000858 <GPIO_PeriClockControl+0x1c8>)
 8000740:	4293      	cmp	r3, r2
 8000742:	d106      	bne.n	8000752 <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 8000744:	4b3d      	ldr	r3, [pc, #244]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000746:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000748:	4a3c      	ldr	r2, [pc, #240]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 800074a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800074e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000750:	e06c      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	4a41      	ldr	r2, [pc, #260]	; (800085c <GPIO_PeriClockControl+0x1cc>)
 8000756:	4293      	cmp	r3, r2
 8000758:	d168      	bne.n	800082c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 800075a:	4b38      	ldr	r3, [pc, #224]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 800075c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800075e:	4a37      	ldr	r2, [pc, #220]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000760:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000764:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000766:	e061      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	4a33      	ldr	r2, [pc, #204]	; (8000838 <GPIO_PeriClockControl+0x1a8>)
 800076c:	4293      	cmp	r3, r2
 800076e:	d106      	bne.n	800077e <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000770:	4b32      	ldr	r3, [pc, #200]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000772:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000774:	4a31      	ldr	r2, [pc, #196]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000776:	f023 0301 	bic.w	r3, r3, #1
 800077a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800077c:	e056      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	4a2f      	ldr	r2, [pc, #188]	; (8000840 <GPIO_PeriClockControl+0x1b0>)
 8000782:	4293      	cmp	r3, r2
 8000784:	d106      	bne.n	8000794 <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 8000786:	4b2d      	ldr	r3, [pc, #180]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800078a:	4a2c      	ldr	r2, [pc, #176]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 800078c:	f023 0302 	bic.w	r3, r3, #2
 8000790:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000792:	e04b      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 8000794:	687b      	ldr	r3, [r7, #4]
 8000796:	4a2b      	ldr	r2, [pc, #172]	; (8000844 <GPIO_PeriClockControl+0x1b4>)
 8000798:	4293      	cmp	r3, r2
 800079a:	d106      	bne.n	80007aa <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 800079c:	4b27      	ldr	r3, [pc, #156]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 800079e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007a0:	4a26      	ldr	r2, [pc, #152]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007a2:	f023 0304 	bic.w	r3, r3, #4
 80007a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007a8:	e040      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	4a26      	ldr	r2, [pc, #152]	; (8000848 <GPIO_PeriClockControl+0x1b8>)
 80007ae:	4293      	cmp	r3, r2
 80007b0:	d106      	bne.n	80007c0 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80007b2:	4b22      	ldr	r3, [pc, #136]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007b6:	4a21      	ldr	r2, [pc, #132]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007b8:	f023 0308 	bic.w	r3, r3, #8
 80007bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007be:	e035      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	4a22      	ldr	r2, [pc, #136]	; (800084c <GPIO_PeriClockControl+0x1bc>)
 80007c4:	4293      	cmp	r3, r2
 80007c6:	d106      	bne.n	80007d6 <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80007c8:	4b1c      	ldr	r3, [pc, #112]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007cc:	4a1b      	ldr	r2, [pc, #108]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007ce:	f023 0310 	bic.w	r3, r3, #16
 80007d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007d4:	e02a      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	4a1d      	ldr	r2, [pc, #116]	; (8000850 <GPIO_PeriClockControl+0x1c0>)
 80007da:	4293      	cmp	r3, r2
 80007dc:	d106      	bne.n	80007ec <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80007de:	4b17      	ldr	r3, [pc, #92]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007e2:	4a16      	ldr	r2, [pc, #88]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007e4:	f023 0320 	bic.w	r3, r3, #32
 80007e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80007ea:	e01f      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	4a19      	ldr	r2, [pc, #100]	; (8000854 <GPIO_PeriClockControl+0x1c4>)
 80007f0:	4293      	cmp	r3, r2
 80007f2:	d106      	bne.n	8000802 <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 80007f4:	4b11      	ldr	r3, [pc, #68]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007f8:	4a10      	ldr	r2, [pc, #64]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 80007fa:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80007fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000800:	e014      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 8000802:	687b      	ldr	r3, [r7, #4]
 8000804:	4a14      	ldr	r2, [pc, #80]	; (8000858 <GPIO_PeriClockControl+0x1c8>)
 8000806:	4293      	cmp	r3, r2
 8000808:	d106      	bne.n	8000818 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 800080a:	4b0c      	ldr	r3, [pc, #48]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 800080c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800080e:	4a0b      	ldr	r2, [pc, #44]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000810:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000814:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000816:	e009      	b.n	800082c <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000818:	687b      	ldr	r3, [r7, #4]
 800081a:	4a10      	ldr	r2, [pc, #64]	; (800085c <GPIO_PeriClockControl+0x1cc>)
 800081c:	4293      	cmp	r3, r2
 800081e:	d105      	bne.n	800082c <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000820:	4b06      	ldr	r3, [pc, #24]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000822:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000824:	4a05      	ldr	r2, [pc, #20]	; (800083c <GPIO_PeriClockControl+0x1ac>)
 8000826:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800082a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800082c:	bf00      	nop
 800082e:	370c      	adds	r7, #12
 8000830:	46bd      	mov	sp, r7
 8000832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000836:	4770      	bx	lr
 8000838:	40020000 	.word	0x40020000
 800083c:	40023800 	.word	0x40023800
 8000840:	40020400 	.word	0x40020400
 8000844:	40020800 	.word	0x40020800
 8000848:	40020c00 	.word	0x40020c00
 800084c:	40021000 	.word	0x40021000
 8000850:	40021400 	.word	0x40021400
 8000854:	40021500 	.word	0x40021500
 8000858:	40021c00 	.word	0x40021c00
 800085c:	40022000 	.word	0x40022000

08000860 <GPIO_IRQHandling>:
	uint8_t shift_amount = (8*iprx_Section) +(8 - NO_PR_BITS_IMPLEMENTED);
	*(NVIC_PR_BASEADDR + iprx*4) = (IRQPriority << shift_amount);
}

void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000860:	b480      	push	{r7}
 8000862:	b083      	sub	sp, #12
 8000864:	af00      	add	r7, sp, #0
 8000866:	4603      	mov	r3, r0
 8000868:	71fb      	strb	r3, [r7, #7]
	if(EXTI->PR & (1<<PinNumber))
 800086a:	4b0c      	ldr	r3, [pc, #48]	; (800089c <GPIO_IRQHandling+0x3c>)
 800086c:	695b      	ldr	r3, [r3, #20]
 800086e:	79fa      	ldrb	r2, [r7, #7]
 8000870:	2101      	movs	r1, #1
 8000872:	fa01 f202 	lsl.w	r2, r1, r2
 8000876:	4013      	ands	r3, r2
 8000878:	2b00      	cmp	r3, #0
 800087a:	d009      	beq.n	8000890 <GPIO_IRQHandling+0x30>
	{
		EXTI->PR |= (1 <<PinNumber);
 800087c:	4b07      	ldr	r3, [pc, #28]	; (800089c <GPIO_IRQHandling+0x3c>)
 800087e:	695b      	ldr	r3, [r3, #20]
 8000880:	79fa      	ldrb	r2, [r7, #7]
 8000882:	2101      	movs	r1, #1
 8000884:	fa01 f202 	lsl.w	r2, r1, r2
 8000888:	4611      	mov	r1, r2
 800088a:	4a04      	ldr	r2, [pc, #16]	; (800089c <GPIO_IRQHandling+0x3c>)
 800088c:	430b      	orrs	r3, r1
 800088e:	6153      	str	r3, [r2, #20]
	}
}
 8000890:	bf00      	nop
 8000892:	370c      	adds	r7, #12
 8000894:	46bd      	mov	sp, r7
 8000896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800089a:	4770      	bx	lr
 800089c:	40013c00 	.word	0x40013c00

080008a0 <SPI_Init>:
 */

#include "stm32f4xx_spi_driver.h"

void SPI_Init(SPI_Handle_t  *pSPIHandle)
{
 80008a0:	b580      	push	{r7, lr}
 80008a2:	b084      	sub	sp, #16
 80008a4:	af00      	add	r7, sp, #0
 80008a6:	6078      	str	r0, [r7, #4]
	//FIRST CONFIG FOR SPI_CR1
	uint32_t temp = 0;
 80008a8:	2300      	movs	r3, #0
 80008aa:	60fb      	str	r3, [r7, #12]

	// SSIx Clock Configuration
	SPI_PeriClockControl(pSPIHandle->pSPIx,ENABLE);
 80008ac:	687b      	ldr	r3, [r7, #4]
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	2101      	movs	r1, #1
 80008b2:	4618      	mov	r0, r3
 80008b4:	f000 f848 	bl	8000948 <SPI_PeriClockControl>

	temp |= pSPIHandle->SPIConfig.SPI_DeviceMode << 2;
 80008b8:	687b      	ldr	r3, [r7, #4]
 80008ba:	791b      	ldrb	r3, [r3, #4]
 80008bc:	009b      	lsls	r3, r3, #2
 80008be:	461a      	mov	r2, r3
 80008c0:	68fb      	ldr	r3, [r7, #12]
 80008c2:	4313      	orrs	r3, r2
 80008c4:	60fb      	str	r3, [r7, #12]

	//BUS config

	if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUSCONFIG_FD)
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	795b      	ldrb	r3, [r3, #5]
 80008ca:	2b01      	cmp	r3, #1
 80008cc:	d104      	bne.n	80008d8 <SPI_Init+0x38>
	{
		temp &= ~(1<<15);
 80008ce:	68fb      	ldr	r3, [r7, #12]
 80008d0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80008d4:	60fb      	str	r3, [r7, #12]
 80008d6:	e014      	b.n	8000902 <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUSCONFIG_HD)
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	795b      	ldrb	r3, [r3, #5]
 80008dc:	2b02      	cmp	r3, #2
 80008de:	d104      	bne.n	80008ea <SPI_Init+0x4a>
	{
		temp |= (1<<15);
 80008e0:	68fb      	ldr	r3, [r7, #12]
 80008e2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80008e6:	60fb      	str	r3, [r7, #12]
 80008e8:	e00b      	b.n	8000902 <SPI_Init+0x62>
	}
	else if(pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUSCONFIG_SIMPLEX_RX)
 80008ea:	687b      	ldr	r3, [r7, #4]
 80008ec:	795b      	ldrb	r3, [r3, #5]
 80008ee:	2b04      	cmp	r3, #4
 80008f0:	d107      	bne.n	8000902 <SPI_Init+0x62>
	{
		temp &= ~(1<<15);
 80008f2:	68fb      	ldr	r3, [r7, #12]
 80008f4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80008f8:	60fb      	str	r3, [r7, #12]
		temp |= (1<<10);
 80008fa:	68fb      	ldr	r3, [r7, #12]
 80008fc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000900:	60fb      	str	r3, [r7, #12]
	}
	temp |= pSPIHandle->SPIConfig.SPI_SclkSpeed << 3;
 8000902:	687b      	ldr	r3, [r7, #4]
 8000904:	799b      	ldrb	r3, [r3, #6]
 8000906:	00db      	lsls	r3, r3, #3
 8000908:	461a      	mov	r2, r3
 800090a:	68fb      	ldr	r3, [r7, #12]
 800090c:	4313      	orrs	r3, r2
 800090e:	60fb      	str	r3, [r7, #12]
	temp |= pSPIHandle->SPIConfig.SPI_DFF << 11;
 8000910:	687b      	ldr	r3, [r7, #4]
 8000912:	79db      	ldrb	r3, [r3, #7]
 8000914:	02db      	lsls	r3, r3, #11
 8000916:	461a      	mov	r2, r3
 8000918:	68fb      	ldr	r3, [r7, #12]
 800091a:	4313      	orrs	r3, r2
 800091c:	60fb      	str	r3, [r7, #12]
	temp |= pSPIHandle->SPIConfig.SPI_CPOL << 1;
 800091e:	687b      	ldr	r3, [r7, #4]
 8000920:	7a1b      	ldrb	r3, [r3, #8]
 8000922:	005b      	lsls	r3, r3, #1
 8000924:	461a      	mov	r2, r3
 8000926:	68fb      	ldr	r3, [r7, #12]
 8000928:	4313      	orrs	r3, r2
 800092a:	60fb      	str	r3, [r7, #12]
	temp |= pSPIHandle->SPIConfig.SPI_CPHA  << 0;
 800092c:	687b      	ldr	r3, [r7, #4]
 800092e:	7a5b      	ldrb	r3, [r3, #9]
 8000930:	461a      	mov	r2, r3
 8000932:	68fb      	ldr	r3, [r7, #12]
 8000934:	4313      	orrs	r3, r2
 8000936:	60fb      	str	r3, [r7, #12]

	pSPIHandle->pSPIx->CR1 = temp;
 8000938:	687b      	ldr	r3, [r7, #4]
 800093a:	681b      	ldr	r3, [r3, #0]
 800093c:	68fa      	ldr	r2, [r7, #12]
 800093e:	601a      	str	r2, [r3, #0]
}
 8000940:	bf00      	nop
 8000942:	3710      	adds	r7, #16
 8000944:	46bd      	mov	sp, r7
 8000946:	bd80      	pop	{r7, pc}

08000948 <SPI_PeriClockControl>:
	{
		SPI3_REG_RESET();
	}
}
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 8000948:	b480      	push	{r7}
 800094a:	b083      	sub	sp, #12
 800094c:	af00      	add	r7, sp, #0
 800094e:	6078      	str	r0, [r7, #4]
 8000950:	460b      	mov	r3, r1
 8000952:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000954:	78fb      	ldrb	r3, [r7, #3]
 8000956:	2b01      	cmp	r3, #1
 8000958:	d120      	bne.n	800099c <SPI_PeriClockControl+0x54>
	{
		if(pSPIx == SPI1)
 800095a:	687b      	ldr	r3, [r7, #4]
 800095c:	4a22      	ldr	r2, [pc, #136]	; (80009e8 <SPI_PeriClockControl+0xa0>)
 800095e:	4293      	cmp	r3, r2
 8000960:	d106      	bne.n	8000970 <SPI_PeriClockControl+0x28>
		{
			SPI1_PCLK_EN();
 8000962:	4b22      	ldr	r3, [pc, #136]	; (80009ec <SPI_PeriClockControl+0xa4>)
 8000964:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000966:	4a21      	ldr	r2, [pc, #132]	; (80009ec <SPI_PeriClockControl+0xa4>)
 8000968:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800096c:	6453      	str	r3, [r2, #68]	; 0x44
			{
				SPI3_PCLK_DI();
			}
	}
	}
}
 800096e:	e035      	b.n	80009dc <SPI_PeriClockControl+0x94>
		else if(pSPIx == SPI2)
 8000970:	687b      	ldr	r3, [r7, #4]
 8000972:	4a1f      	ldr	r2, [pc, #124]	; (80009f0 <SPI_PeriClockControl+0xa8>)
 8000974:	4293      	cmp	r3, r2
 8000976:	d106      	bne.n	8000986 <SPI_PeriClockControl+0x3e>
			SPI2_PCLK_EN();
 8000978:	4b1c      	ldr	r3, [pc, #112]	; (80009ec <SPI_PeriClockControl+0xa4>)
 800097a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800097c:	4a1b      	ldr	r2, [pc, #108]	; (80009ec <SPI_PeriClockControl+0xa4>)
 800097e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000982:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000984:	e02a      	b.n	80009dc <SPI_PeriClockControl+0x94>
		else if(pSPIx == SPI3)
 8000986:	687b      	ldr	r3, [r7, #4]
 8000988:	4a1a      	ldr	r2, [pc, #104]	; (80009f4 <SPI_PeriClockControl+0xac>)
 800098a:	4293      	cmp	r3, r2
 800098c:	d126      	bne.n	80009dc <SPI_PeriClockControl+0x94>
			SPI3_PCLK_EN();
 800098e:	4b17      	ldr	r3, [pc, #92]	; (80009ec <SPI_PeriClockControl+0xa4>)
 8000990:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000992:	4a16      	ldr	r2, [pc, #88]	; (80009ec <SPI_PeriClockControl+0xa4>)
 8000994:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000998:	6413      	str	r3, [r2, #64]	; 0x40
}
 800099a:	e01f      	b.n	80009dc <SPI_PeriClockControl+0x94>
			if(pSPIx == SPI1)
 800099c:	687b      	ldr	r3, [r7, #4]
 800099e:	4a12      	ldr	r2, [pc, #72]	; (80009e8 <SPI_PeriClockControl+0xa0>)
 80009a0:	4293      	cmp	r3, r2
 80009a2:	d106      	bne.n	80009b2 <SPI_PeriClockControl+0x6a>
				SPI1_PCLK_DI();
 80009a4:	4b11      	ldr	r3, [pc, #68]	; (80009ec <SPI_PeriClockControl+0xa4>)
 80009a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009a8:	4a10      	ldr	r2, [pc, #64]	; (80009ec <SPI_PeriClockControl+0xa4>)
 80009aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80009ae:	6453      	str	r3, [r2, #68]	; 0x44
}
 80009b0:	e014      	b.n	80009dc <SPI_PeriClockControl+0x94>
			else if(pSPIx == SPI2)
 80009b2:	687b      	ldr	r3, [r7, #4]
 80009b4:	4a0e      	ldr	r2, [pc, #56]	; (80009f0 <SPI_PeriClockControl+0xa8>)
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d106      	bne.n	80009c8 <SPI_PeriClockControl+0x80>
				SPI2_PCLK_DI();
 80009ba:	4b0c      	ldr	r3, [pc, #48]	; (80009ec <SPI_PeriClockControl+0xa4>)
 80009bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009be:	4a0b      	ldr	r2, [pc, #44]	; (80009ec <SPI_PeriClockControl+0xa4>)
 80009c0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80009c4:	6413      	str	r3, [r2, #64]	; 0x40
}
 80009c6:	e009      	b.n	80009dc <SPI_PeriClockControl+0x94>
			else if(pSPIx == SPI3)
 80009c8:	687b      	ldr	r3, [r7, #4]
 80009ca:	4a0a      	ldr	r2, [pc, #40]	; (80009f4 <SPI_PeriClockControl+0xac>)
 80009cc:	4293      	cmp	r3, r2
 80009ce:	d105      	bne.n	80009dc <SPI_PeriClockControl+0x94>
				SPI3_PCLK_DI();
 80009d0:	4b06      	ldr	r3, [pc, #24]	; (80009ec <SPI_PeriClockControl+0xa4>)
 80009d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80009d4:	4a05      	ldr	r2, [pc, #20]	; (80009ec <SPI_PeriClockControl+0xa4>)
 80009d6:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80009da:	6413      	str	r3, [r2, #64]	; 0x40
}
 80009dc:	bf00      	nop
 80009de:	370c      	adds	r7, #12
 80009e0:	46bd      	mov	sp, r7
 80009e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009e6:	4770      	bx	lr
 80009e8:	40013000 	.word	0x40013000
 80009ec:	40023800 	.word	0x40023800
 80009f0:	40003800 	.word	0x40003800
 80009f4:	40003c00 	.word	0x40003c00

080009f8 <SPI_GetFlagStatus>:

uint8_t SPI_GetFlagStatus(SPI_RegDef_t  *pSPIx, uint32_t FlagName)
{
 80009f8:	b480      	push	{r7}
 80009fa:	b083      	sub	sp, #12
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
 8000a00:	6039      	str	r1, [r7, #0]
	if(pSPIx->SR & FlagName)
 8000a02:	687b      	ldr	r3, [r7, #4]
 8000a04:	689a      	ldr	r2, [r3, #8]
 8000a06:	683b      	ldr	r3, [r7, #0]
 8000a08:	4013      	ands	r3, r2
 8000a0a:	2b00      	cmp	r3, #0
 8000a0c:	d001      	beq.n	8000a12 <SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8000a0e:	2301      	movs	r3, #1
 8000a10:	e000      	b.n	8000a14 <SPI_GetFlagStatus+0x1c>
	}
	return  FLAG_RESET;
 8000a12:	2300      	movs	r3, #0
}
 8000a14:	4618      	mov	r0, r3
 8000a16:	370c      	adds	r7, #12
 8000a18:	46bd      	mov	sp, r7
 8000a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a1e:	4770      	bx	lr

08000a20 <SPI_SendData>:
/*
 * DATA SEND AND RECEIVED
 */

void SPI_SendData(SPI_RegDef_t *pSPIx,uint8_t *pTxBuffer, uint32_t Len)
{
 8000a20:	b580      	push	{r7, lr}
 8000a22:	b084      	sub	sp, #16
 8000a24:	af00      	add	r7, sp, #0
 8000a26:	60f8      	str	r0, [r7, #12]
 8000a28:	60b9      	str	r1, [r7, #8]
 8000a2a:	607a      	str	r2, [r7, #4]
	while(Len > 0)
 8000a2c:	e027      	b.n	8000a7e <SPI_SendData+0x5e>
	{
		//Wait until TXE is set
		while(SPI_GetFlagStatus(pSPIx,SPI_TX_FLAG)  ==  FLAG_RESET);
 8000a2e:	bf00      	nop
 8000a30:	2102      	movs	r1, #2
 8000a32:	68f8      	ldr	r0, [r7, #12]
 8000a34:	f7ff ffe0 	bl	80009f8 <SPI_GetFlagStatus>
 8000a38:	4603      	mov	r3, r0
 8000a3a:	2b00      	cmp	r3, #0
 8000a3c:	d0f8      	beq.n	8000a30 <SPI_SendData+0x10>

		//Check the dff bit
		if(pSPIx->CR1 & (1<<11))
 8000a3e:	68fb      	ldr	r3, [r7, #12]
 8000a40:	681b      	ldr	r3, [r3, #0]
 8000a42:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000a46:	2b00      	cmp	r3, #0
 8000a48:	d00e      	beq.n	8000a68 <SPI_SendData+0x48>
		{
			// 16  bit dff
			pSPIx->DR = *((uint16_t *)pTxBuffer);
 8000a4a:	68bb      	ldr	r3, [r7, #8]
 8000a4c:	881b      	ldrh	r3, [r3, #0]
 8000a4e:	461a      	mov	r2, r3
 8000a50:	68fb      	ldr	r3, [r7, #12]
 8000a52:	60da      	str	r2, [r3, #12]
			Len--;
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	3b01      	subs	r3, #1
 8000a58:	607b      	str	r3, [r7, #4]
			Len--;
 8000a5a:	687b      	ldr	r3, [r7, #4]
 8000a5c:	3b01      	subs	r3, #1
 8000a5e:	607b      	str	r3, [r7, #4]
			(uint16_t *)pTxBuffer++;
 8000a60:	68bb      	ldr	r3, [r7, #8]
 8000a62:	3301      	adds	r3, #1
 8000a64:	60bb      	str	r3, [r7, #8]
 8000a66:	e00a      	b.n	8000a7e <SPI_SendData+0x5e>
		}else
		{
			//8 bit dff
			pSPIx->DR = *(pTxBuffer);
 8000a68:	68bb      	ldr	r3, [r7, #8]
 8000a6a:	781b      	ldrb	r3, [r3, #0]
 8000a6c:	461a      	mov	r2, r3
 8000a6e:	68fb      	ldr	r3, [r7, #12]
 8000a70:	60da      	str	r2, [r3, #12]
			Len--;
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	3b01      	subs	r3, #1
 8000a76:	607b      	str	r3, [r7, #4]
			pTxBuffer++;
 8000a78:	68bb      	ldr	r3, [r7, #8]
 8000a7a:	3301      	adds	r3, #1
 8000a7c:	60bb      	str	r3, [r7, #8]
	while(Len > 0)
 8000a7e:	687b      	ldr	r3, [r7, #4]
 8000a80:	2b00      	cmp	r3, #0
 8000a82:	d1d4      	bne.n	8000a2e <SPI_SendData+0xe>
		}
	}
}
 8000a84:	bf00      	nop
 8000a86:	3710      	adds	r7, #16
 8000a88:	46bd      	mov	sp, r7
 8000a8a:	bd80      	pop	{r7, pc}

08000a8c <SPI_PeripheralControl>:

void SPI_PeripheralControl(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 8000a8c:	b480      	push	{r7}
 8000a8e:	b083      	sub	sp, #12
 8000a90:	af00      	add	r7, sp, #0
 8000a92:	6078      	str	r0, [r7, #4]
 8000a94:	460b      	mov	r3, r1
 8000a96:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000a98:	78fb      	ldrb	r3, [r7, #3]
 8000a9a:	2b01      	cmp	r3, #1
 8000a9c:	d106      	bne.n	8000aac <SPI_PeripheralControl+0x20>
	{	// ENABLE SPIx
		pSPIx->CR1  |= (1<<6);
 8000a9e:	687b      	ldr	r3, [r7, #4]
 8000aa0:	681b      	ldr	r3, [r3, #0]
 8000aa2:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000aa6:	687b      	ldr	r3, [r7, #4]
 8000aa8:	601a      	str	r2, [r3, #0]
	}
	else
	{	// DISABLE SPIx
		pSPIx->CR1  &= ~(1<<6);
	}
}
 8000aaa:	e005      	b.n	8000ab8 <SPI_PeripheralControl+0x2c>
		pSPIx->CR1  &= ~(1<<6);
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	681b      	ldr	r3, [r3, #0]
 8000ab0:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000ab4:	687b      	ldr	r3, [r7, #4]
 8000ab6:	601a      	str	r2, [r3, #0]
}
 8000ab8:	bf00      	nop
 8000aba:	370c      	adds	r7, #12
 8000abc:	46bd      	mov	sp, r7
 8000abe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ac2:	4770      	bx	lr

08000ac4 <SPI_SSIconfig>:

void SPI_SSIconfig(SPI_RegDef_t *pSPIx,uint8_t EnorDi)
{
 8000ac4:	b480      	push	{r7}
 8000ac6:	b083      	sub	sp, #12
 8000ac8:	af00      	add	r7, sp, #0
 8000aca:	6078      	str	r0, [r7, #4]
 8000acc:	460b      	mov	r3, r1
 8000ace:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000ad0:	78fb      	ldrb	r3, [r7, #3]
 8000ad2:	2b01      	cmp	r3, #1
 8000ad4:	d106      	bne.n	8000ae4 <SPI_SSIconfig+0x20>
	{	// ENABLE THE SSI
		pSPIx->CR1  |= (1<<8);
 8000ad6:	687b      	ldr	r3, [r7, #4]
 8000ad8:	681b      	ldr	r3, [r3, #0]
 8000ada:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8000ade:	687b      	ldr	r3, [r7, #4]
 8000ae0:	601a      	str	r2, [r3, #0]
	}
	else
	{	// DISABLE THE SSI
		pSPIx->CR1  &= ~(1<<8);
	}
}
 8000ae2:	e005      	b.n	8000af0 <SPI_SSIconfig+0x2c>
		pSPIx->CR1  &= ~(1<<8);
 8000ae4:	687b      	ldr	r3, [r7, #4]
 8000ae6:	681b      	ldr	r3, [r3, #0]
 8000ae8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8000aec:	687b      	ldr	r3, [r7, #4]
 8000aee:	601a      	str	r2, [r3, #0]
}
 8000af0:	bf00      	nop
 8000af2:	370c      	adds	r7, #12
 8000af4:	46bd      	mov	sp, r7
 8000af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000afa:	4770      	bx	lr

08000afc <__libc_init_array>:
 8000afc:	b570      	push	{r4, r5, r6, lr}
 8000afe:	4e0d      	ldr	r6, [pc, #52]	; (8000b34 <__libc_init_array+0x38>)
 8000b00:	4c0d      	ldr	r4, [pc, #52]	; (8000b38 <__libc_init_array+0x3c>)
 8000b02:	1ba4      	subs	r4, r4, r6
 8000b04:	10a4      	asrs	r4, r4, #2
 8000b06:	2500      	movs	r5, #0
 8000b08:	42a5      	cmp	r5, r4
 8000b0a:	d109      	bne.n	8000b20 <__libc_init_array+0x24>
 8000b0c:	4e0b      	ldr	r6, [pc, #44]	; (8000b3c <__libc_init_array+0x40>)
 8000b0e:	4c0c      	ldr	r4, [pc, #48]	; (8000b40 <__libc_init_array+0x44>)
 8000b10:	f000 f818 	bl	8000b44 <_init>
 8000b14:	1ba4      	subs	r4, r4, r6
 8000b16:	10a4      	asrs	r4, r4, #2
 8000b18:	2500      	movs	r5, #0
 8000b1a:	42a5      	cmp	r5, r4
 8000b1c:	d105      	bne.n	8000b2a <__libc_init_array+0x2e>
 8000b1e:	bd70      	pop	{r4, r5, r6, pc}
 8000b20:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000b24:	4798      	blx	r3
 8000b26:	3501      	adds	r5, #1
 8000b28:	e7ee      	b.n	8000b08 <__libc_init_array+0xc>
 8000b2a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000b2e:	4798      	blx	r3
 8000b30:	3501      	adds	r5, #1
 8000b32:	e7f2      	b.n	8000b1a <__libc_init_array+0x1e>
 8000b34:	08000b68 	.word	0x08000b68
 8000b38:	08000b68 	.word	0x08000b68
 8000b3c:	08000b68 	.word	0x08000b68
 8000b40:	08000b6c 	.word	0x08000b6c

08000b44 <_init>:
 8000b44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b46:	bf00      	nop
 8000b48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b4a:	bc08      	pop	{r3}
 8000b4c:	469e      	mov	lr, r3
 8000b4e:	4770      	bx	lr

08000b50 <_fini>:
 8000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b52:	bf00      	nop
 8000b54:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b56:	bc08      	pop	{r3}
 8000b58:	469e      	mov	lr, r3
 8000b5a:	4770      	bx	lr
